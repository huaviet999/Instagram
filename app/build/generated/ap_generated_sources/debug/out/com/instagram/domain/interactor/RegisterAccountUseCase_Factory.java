// Generated by Dagger (https://dagger.dev).
package com.instagram.domain.interactor;

import com.instagram.domain.executor.ExecutionThread;
import com.instagram.domain.repository.AccountInfoRepository;
import com.instagram.domain.repository.AuthenticationRepository;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RegisterAccountUseCase_Factory implements Factory<RegisterAccountUseCase> {
  private final Provider<ExecutionThread> executionThreadProvider;

  private final Provider<AuthenticationRepository> authenticationRepositoryProvider;

  private final Provider<AccountInfoRepository> accountInfoRepositoryProvider;

  public RegisterAccountUseCase_Factory(Provider<ExecutionThread> executionThreadProvider,
      Provider<AuthenticationRepository> authenticationRepositoryProvider,
      Provider<AccountInfoRepository> accountInfoRepositoryProvider) {
    this.executionThreadProvider = executionThreadProvider;
    this.authenticationRepositoryProvider = authenticationRepositoryProvider;
    this.accountInfoRepositoryProvider = accountInfoRepositoryProvider;
  }

  @Override
  public RegisterAccountUseCase get() {
    return newInstance(executionThreadProvider.get(), authenticationRepositoryProvider.get(), accountInfoRepositoryProvider.get());
  }

  public static RegisterAccountUseCase_Factory create(
      Provider<ExecutionThread> executionThreadProvider,
      Provider<AuthenticationRepository> authenticationRepositoryProvider,
      Provider<AccountInfoRepository> accountInfoRepositoryProvider) {
    return new RegisterAccountUseCase_Factory(executionThreadProvider, authenticationRepositoryProvider, accountInfoRepositoryProvider);
  }

  public static RegisterAccountUseCase newInstance(ExecutionThread executionThread,
      AuthenticationRepository authenticationRepository,
      AccountInfoRepository accountInfoRepository) {
    return new RegisterAccountUseCase(executionThread, authenticationRepository, accountInfoRepository);
  }
}
