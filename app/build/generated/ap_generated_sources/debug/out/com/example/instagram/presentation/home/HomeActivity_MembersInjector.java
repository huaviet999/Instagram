// Generated by Dagger (https://dagger.dev).
package com.example.instagram.presentation.home;

import com.example.instagram.presentation.base.BaseActivity_MembersInjector;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeActivity_MembersInjector implements MembersInjector<HomeActivity> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  private final Provider<HomeContract.Presenter> presenterProvider;

  public HomeActivity_MembersInjector(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<HomeContract.Presenter> presenterProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<HomeActivity> create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider,
      Provider<HomeContract.Presenter> presenterProvider) {
    return new HomeActivity_MembersInjector(androidInjectorProvider, presenterProvider);}

  @Override
  public void injectMembers(HomeActivity instance) {
    BaseActivity_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    injectPresenter(instance, presenterProvider.get());
  }

  @InjectedFieldSignature("com.example.instagram.presentation.home.HomeActivity.presenter")
  public static void injectPresenter(HomeActivity instance, HomeContract.Presenter presenter) {
    instance.presenter = presenter;
  }
}
