// Generated by Dagger (https://dagger.dev).
package com.example.data;

import com.example.data.repository.AuthenticationRemote;
import dagger.internal.Factory;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthenticationRepositoryImpl_Factory implements Factory<AuthenticationRepositoryImpl> {
  private final Provider<AuthenticationRemote> authenticationRemoteProvider;

  public AuthenticationRepositoryImpl_Factory(
      Provider<AuthenticationRemote> authenticationRemoteProvider) {
    this.authenticationRemoteProvider = authenticationRemoteProvider;
  }

  @Override
  public AuthenticationRepositoryImpl get() {
    return newInstance(authenticationRemoteProvider.get());
  }

  public static AuthenticationRepositoryImpl_Factory create(
      Provider<AuthenticationRemote> authenticationRemoteProvider) {
    return new AuthenticationRepositoryImpl_Factory(authenticationRemoteProvider);
  }

  public static AuthenticationRepositoryImpl newInstance(
      AuthenticationRemote authenticationRemote) {
    return new AuthenticationRepositoryImpl(authenticationRemote);
  }
}
