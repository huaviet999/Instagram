// Generated by Dagger (https://dagger.dev).
package com.example.instagram.di;

import android.content.Context;
import com.example.instagram.myapp.MyApp;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideContextFactory implements Factory<Context> {
  private final AppModule module;

  private final Provider<MyApp> myAppProvider;

  public AppModule_ProvideContextFactory(AppModule module, Provider<MyApp> myAppProvider) {
    this.module = module;
    this.myAppProvider = myAppProvider;
  }

  @Override
  public Context get() {
    return provideContext(module, myAppProvider.get());
  }

  public static AppModule_ProvideContextFactory create(AppModule module,
      Provider<MyApp> myAppProvider) {
    return new AppModule_ProvideContextFactory(module, myAppProvider);
  }

  public static Context provideContext(AppModule instance, MyApp myApp) {
    return Preconditions.checkNotNull(instance.provideContext(myApp), "Cannot return null from a non-@Nullable @Provides method");
  }
}
